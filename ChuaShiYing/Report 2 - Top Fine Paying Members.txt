SET SERVEROUTPUT ON;
SET LINESIZE 200;
SET PAGESIZE 200;

CREATE OR REPLACE PROCEDURE prc_top_fine_payers (
    p_start_date IN DATE,
    p_end_date   IN DATE
)
IS
    -- Cursor to fetch members with total paid fines
    CURSOR cur_members IS
        SELECT m.MemberID, m.FirstName || ' ' || m.LastName AS FullName, SUM(f.FineAmount) AS TotalPaid
        FROM Member m
        JOIN Loan l ON m.MemberID = l.MemberID
        JOIN LoanDetail ld ON l.LoanID = ld.LoanID
        JOIN Fine f ON ld.FineID = f.FineID
        WHERE f.FineStatus = 'PAID'
          AND f.IssueDate BETWEEN p_start_date AND p_end_date
        GROUP BY m.MemberID, m.FirstName, m.LastName
        HAVING SUM(f.FineAmount) > 0
        ORDER BY TotalPaid DESC;

    -- Cursor to get invoices per member
    CURSOR cur_invoice(p_member_id CHAR) IS
        SELECT InvoiceID, PaymentDate, PaymentMethod, TotalAmount
        FROM Invoice
        WHERE MemberID = p_member_id
          AND PaymentDate BETWEEN p_start_date AND p_end_date;

    -- Cursor to get fines per invoice
    CURSOR cur_fines(p_invoice_id CHAR) IS
        SELECT FineID, FineAmount, IssueDate, Remark
        FROM Fine
        WHERE InvoiceID = p_invoice_id AND FineStatus = 'PAID';

    -- Record variables
    v_member     cur_members%ROWTYPE;
    v_invoice    cur_invoice%ROWTYPE;
    v_fine       cur_fines%ROWTYPE;

    -- Totals
    v_grand_total NUMBER := 0;
BEGIN
    DBMS_OUTPUT.PUT_LINE(RPAD('=', 160, '='));
    DBMS_OUTPUT.PUT_LINE('<<-- Top Fine Paying Members with Invoice and Fine Breakdown -->>');
    DBMS_OUTPUT.PUT_LINE('Report Period: ' || TO_CHAR(p_start_date, 'DD-MON-YYYY') || ' to ' || TO_CHAR(p_end_date, 'DD-MON-YYYY'));
    DBMS_OUTPUT.PUT_LINE(RPAD('=', 160, '='));

    OPEN cur_members;
    LOOP
        FETCH cur_members INTO v_member;
        EXIT WHEN cur_members%NOTFOUND;

        DBMS_OUTPUT.PUT_LINE(CHR(10) || 'Member: ' || v_member.FullName || ' (' || v_member.MemberID || ')');
        DBMS_OUTPUT.PUT_LINE('Total Fines Paid: RM ' || TO_CHAR(v_member.TotalPaid, '9990.00'));
        DBMS_OUTPUT.PUT_LINE(RPAD('-', 160, '-'));
        DBMS_OUTPUT.PUT_LINE(RPAD('InvoiceID', 12) || RPAD('Pay Date', 14) || RPAD('Method', 15) || RPAD('Total(RM)', 12) || ' | ' ||
                             RPAD('FineID', 10) || RPAD('Amount(RM)', 12) || RPAD('Issue Date', 14) || 'Remark');
        DBMS_OUTPUT.PUT_LINE(RPAD('-', 160, '-'));

        OPEN cur_invoice(v_member.MemberID);
        LOOP
            FETCH cur_invoice INTO v_invoice;
            EXIT WHEN cur_invoice%NOTFOUND;

            OPEN cur_fines(v_invoice.InvoiceID);
            LOOP
                FETCH cur_fines INTO v_fine;
                EXIT WHEN cur_fines%NOTFOUND;

                DBMS_OUTPUT.PUT_LINE(
                    RPAD(v_invoice.InvoiceID, 12) ||
                    RPAD(TO_CHAR(v_invoice.PaymentDate, 'DD-MON-YY'), 14) ||
                    RPAD(v_invoice.PaymentMethod, 15) ||
                    RPAD(TO_CHAR(v_invoice.TotalAmount, '9990.00'), 12) || ' | ' ||
                    RPAD(v_fine.FineID, 10) ||
                    RPAD(TO_CHAR(v_fine.FineAmount, '9990.00'), 12) ||
                    RPAD(TO_CHAR(v_fine.IssueDate, 'DD-MON-YY'), 14) ||
                    v_fine.Remark
                );
            END LOOP;
            CLOSE cur_fines;
        END LOOP;
        CLOSE cur_invoice;

        v_grand_total := v_grand_total + v_member.TotalPaid;
        DBMS_OUTPUT.PUT_LINE(RPAD('-', 160, '-'));
    END LOOP;
    CLOSE cur_members;

    DBMS_OUTPUT.PUT_LINE(CHR(10) || 'GRAND TOTAL FINE PAID BY ALL MEMBERS: RM ' || TO_CHAR(v_grand_total, '9990.00'));
    DBMS_OUTPUT.PUT_LINE(RPAD('=', 160, '='));
    DBMS_OUTPUT.PUT_LINE('<<-- End of Report -->>');
    DBMS_OUTPUT.PUT_LINE(RPAD('=', 160, '='));
END;
/

EXEC prc_top_fine_payers(TO_DATE('01-JAN-2023','DD-MON-YYYY'), TO_DATE('31-DEC-2025','DD-MON-YYYY'));

DROP PROCEDURE PRC_TOP_FINE_PAYERS;