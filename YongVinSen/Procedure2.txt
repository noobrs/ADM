SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE prc_extend_loan (v_loan_id IN CHAR, v_book_id IN CHAR) IS
    v_current_due_date DATE;
    v_new_due_date DATE;
    v_extension_count  NUMBER;
    v_current_status     LoanDetail.Status%TYPE;
BEGIN
    SELECT ExtensionCount, NVL(ExtendedDueDate, (SELECT DueDate FROM Loan WHERE LoanID = v_loan_id)), Status
    INTO v_extension_count, v_current_due_date, v_current_status
    FROM LoanDetail
    WHERE LoanID = v_loan_id AND BookID = v_book_id;

    IF v_current_status NOT IN ('BORROWED', 'EXTENDED') THEN
        RAISE_APPLICATION_ERROR(-20000, 'Book: ' || v_book_id || ' cannot be extended as it is not currently on loan.');
    END IF;
    
    IF v_extension_count < 3 THEN
        UPDATE LoanDetail
        SET 
            ExtendedDueDate = v_current_due_date + 7,
            ExtensionCount = v_extension_count + 1,
            Status = 'EXTENDED'
        WHERE LoanID = v_loan_id AND BookID = v_book_id;

        COMMIT;
        
        SELECT ExtendedDueDate INTO v_new_due_date
        FROM LoanDetail
        WHERE LoanID = v_loan_id AND BookID = v_book_id;
        
        DBMS_OUTPUT.PUT_LINE('Loan extended successfully!');
        DBMS_OUTPUT.PUT_LINE('=================================================');
    DBMS_OUTPUT.PUT_LINE('LOAN EXTEND DETAILS');
    DBMS_OUTPUT.PUT_LINE('=================================================');

        DBMS_OUTPUT.PUT_LINE('Loan ID      : ' || v_loan_id);
        DBMS_OUTPUT.PUT_LINE('Book ID      : ' || v_book_id);
        DBMS_OUTPUT.PUT_LINE('Old Due Date : ' || v_current_due_date);
        DBMS_OUTPUT.PUT_LINE('New Due Date : ' || v_new_due_date);
        DBMS_OUTPUT.PUT_LINE('=================================================');
    ELSE
        RAISE_APPLICATION_ERROR(-20000, 'Extension limit reached for this book.');
    END IF;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Loan detail not found for the specified Loan ID and Book ID.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
        ROLLBACK;
END;
/

-- 1. Valid extension (ExtensionCount < 3)
INSERT INTO Loan VALUES (('LOA' || TO_CHAR(loan_seq.NEXTVAL, 'FM0000000')), SYSDATE, SYSDATE + 14, 'MEM0000011');
INSERT INTO LoanDetail VALUES (('LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000')), 'BOK0000001', NULL, 0, NULL, 'BORROWED', NULL);
INSERT INTO LoanDetail VALUES (('LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000')), 'BOK0000002', NULL, 0, NULL, 'BORROWED', NULL);
INSERT INTO LoanDetail VALUES (('LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000')), 'BOK0000003', NULL, 0, NULL, 'BORROWED', NULL);
INSERT INTO LoanDetail VALUES (('LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000')), 'BOK0000004', NULL, 0, NULL, 'BORROWED', NULL);
INSERT INTO LoanDetail VALUES (('LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000')), 'BOK0000005', NULL, 0, NULL, 'BORROWED', NULL);

EXEC prc_extend_loan(('LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000')), 'BOK0000001');


-- 2. Extend Limit Reached
DECLARE
  v_loan_id Loan.LoanID%TYPE;
BEGIN
  v_loan_id := 'LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000');

  UPDATE LoanDetail
  SET ExtensionCount = 3
  WHERE LoanID = v_loan_id AND BookID = 'BOK0000002';
END;
/
EXEC prc_extend_loan(('LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000')), 'BOK0000002');


-- 3. not in borrowed or extended status
DECLARE
  v_loan_id Loan.LoanID%TYPE;
BEGIN
  v_loan_id := 'LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000');

  UPDATE LoanDetail
  SET Status = 'RETURNED'
  WHERE LoanID = v_loan_id AND BookID = 'BOK0000003';
END;
/
EXEC prc_extend_loan(('LOA' || TO_CHAR(loan_seq.CURRVAL, 'FM0000000')), 'BOK0000003');


-- 4. Loan detail not found (Invalid Loan ID or Book ID)
EXEC prc_extend_loan('LOA9999999', 'BOK9999999');