-- 1. Detailed Report: Member Loan and Reservation History Report
CREATE OR REPLACE PROCEDURE proc_member_loan_reservation_history (
  p_MemberID IN Member.MemberID%TYPE
) IS
  CURSOR loan_cursor IS
    SELECT 
      ld.LoanDetailID,
      b.BookTitle,
      l.DueDate,
      ld.Status AS LoanStatus,
      ld.ReturnDate,
      f.FineAmount
    FROM LoanDetail ld
    JOIN Loan l ON ld.LoanID = l.LoanID
    JOIN Book b ON ld.BookID = b.BookID
    LEFT JOIN Fine f ON ld.FineID = f.FineID
    WHERE l.MemberID = p_MemberID
      AND UPPER(ld.Status) IN ('BORROWED', 'RETURNED', 'LATE RETURNED');
  
  CURSOR reservation_cursor IS
    SELECT 
      rd.ReservationDetailID,
      b.BookTitle,
      r.ReservationDate,
      rd.Status AS ReservationStatus,
      r.PickupDate
    FROM ReservationDetail rd
    JOIN Reservation r ON rd.ReservationID = r.ReservationID
    JOIN Book b ON rd.BookID = b.BookID
    WHERE r.MemberID = p_MemberID
      AND UPPER(rd.Status) IN ('AVAILABLE', 'NOT AVAILABLE');
  
  v_loan_record loan_cursor%ROWTYPE;
  v_reservation_record reservation_cursor%ROWTYPE;
BEGIN
  -- Print Header for Loan Report
  DBMS_OUTPUT.PUT_LINE('Loan History for Member ' || p_MemberID);
  DBMS_OUTPUT.PUT_LINE('-------------------------------------------');
  
  -- Loop through loan details and output
  OPEN loan_cursor;
  LOOP
    FETCH loan_cursor INTO v_loan_record;
    EXIT WHEN loan_cursor%NOTFOUND;
    
    DBMS_OUTPUT.PUT_LINE('Loan ID: ' || v_loan_record.LoanDetailID || 
                         ', Book: ' || v_loan_record.BookTitle ||
                         ', Due Date: ' || v_loan_record.DueDate ||
                         ', Status: ' || v_loan_record.LoanStatus ||
                         ', Return Date: ' || COALESCE(v_loan_record.ReturnDate, 'N/A') ||
                         ', Fine: RM ' || COALESCE(v_loan_record.FineAmount, 0));
  END LOOP;
  CLOSE loan_cursor;
  
  -- Print Header for Reservation Report
  DBMS_OUTPUT.PUT_LINE('Reservation History for Member ' || p_MemberID);
  DBMS_OUTPUT.PUT_LINE('-------------------------------------------');
  
  -- Loop through reservation details and output
  OPEN reservation_cursor;
  LOOP
    FETCH reservation_cursor INTO v_reservation_record;
    EXIT WHEN reservation_cursor%NOTFOUND;
    
    DBMS_OUTPUT.PUT_LINE('Reservation ID: ' || v_reservation_record.ReservationDetailID ||
                         ', Book: ' || v_reservation_record.BookTitle ||
                         ', Reservation Date: ' || v_reservation_record.ReservationDate ||
                         ', Status: ' || v_reservation_record.ReservationStatus ||
                         ', Pickup Date: ' || COALESCE(v_reservation_record.PickupDate, 'N/A'));
  END LOOP;
  CLOSE reservation_cursor;
END proc_member_loan_reservation_history;
/




-- 2. Summary Report: Monthly Member Loan and Reservation Summary
CREATE OR REPLACE PROCEDURE proc_monthly_member_summary (
  p_Month IN NUMBER,          -- The month for the report (e.g., 1 for January, 12 for December)
  p_Year  IN NUMBER           -- The year for the report
) IS
  CURSOR summary_cursor IS
    SELECT 
      m.MemberID,
      m.Name,
      COUNT(DISTINCT ld.LoanDetailID) AS TotalLoans,
      COUNT(DISTINCT rd.ReservationDetailID) AS TotalReservations,
      SUM(CASE WHEN f.FineAmount IS NOT NULL THEN f.FineAmount ELSE 0 END) AS TotalFines
    FROM Member m
    LEFT JOIN Loan l ON m.MemberID = l.MemberID
    LEFT JOIN LoanDetail ld ON l.LoanID = ld.LoanID
    LEFT JOIN Reservation r ON m.MemberID = r.MemberID
    LEFT JOIN ReservationDetail rd ON r.ReservationID = rd.ReservationID
    LEFT JOIN Fine f ON ld.FineID = f.FineID
    WHERE EXTRACT(MONTH FROM l.LoanDate) = p_Month
      AND EXTRACT(YEAR FROM l.LoanDate) = p_Year
      OR EXTRACT(MONTH FROM r.ReservationDate) = p_Month
      AND EXTRACT(YEAR FROM r.ReservationDate) = p_Year
    GROUP BY m.MemberID, m.Name;
  
  v_summary_record summary_cursor%ROWTYPE;
BEGIN
  -- Print Header for Monthly Summary Report
  DBMS_OUTPUT.PUT_LINE('Monthly Member Loan and Reservation Summary for ' || p_Month || '/' || p_Year);
  DBMS_OUTPUT.PUT_LINE('-------------------------------------------');
  DBMS_OUTPUT.PUT_LINE('Member ID | Member Name | Total Loans | Total Reservations | Total Fines (RM)');
  
  -- Loop through the summary records and output
  OPEN summary_cursor;
  LOOP
    FETCH summary_cursor INTO v_summary_record;
    EXIT WHEN summary_cursor%NOTFOUND;
    
    DBMS_OUTPUT.PUT_LINE(v_summary_record.MemberID || ' | ' || v_summary_record.Name || 
                         ' | ' || v_summary_record.TotalLoans || 
                         ' | ' || v_summary_record.TotalReservations || 
                         ' | RM ' || v_summary_record.TotalFines);
  END LOOP;
  CLOSE summary_cursor;
END proc_monthly_member_summary;
/
